// This is your Prisma schema file,
// learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Usuários do Clerk
model User {
  id        String   @id            // ID do Clerk
  email     String   @unique
  firstName String?
  imageUrl  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações
  wishlistItems WishlistItem[]
  reviews       Review[]
}

// Wishlist (favoritos)
model WishlistItem {
  userId      String
  productSlug String
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, productSlug]) // chave composta
}

// Tipos de mídia do review
enum ReviewMediaType {
  IMAGE
  VIDEO
}

// Avaliações
model Review {
  id          String        @id @default(cuid())
  text        String
  rating      Int
  productSlug String        @db.VarChar(255)

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relação com o usuário
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relação com mídias
  media ReviewMedia[]

  @@index([productSlug])
}

// Mídias das avaliações
model ReviewMedia {
  id        String          @id @default(cuid())
  type      ReviewMediaType
  url       String
  createdAt DateTime        @default(now())

  reviewId String
  review   Review          @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  @@index([reviewId])
}